import numpy as np

# Example 10x10 array representing default status (0 or 1)
default_array = np.array([
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 0, 1, 1, 0, 1, 0, 1, 1, 0],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 0, 1, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 0, 1, 0, 1, 0],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 0, 1, 0],
    [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
    [0, 1, 0, 1, 0, 1, 0, 1, 0, 1]
])

# Calculate the number of defaults in the last five years for each property
defaults_last_five_years = np.sum(default_array[:, -5:], axis=1)

# Identify properties with 3 or more defaults in the last five years
uninsurable_properties = np.where(defaults_last_five_years >= 3)[0]

# Create a new array to mark uninsurable properties for the next five years
insurability_array = np.ones_like(default_array, dtype=bool)
for property_index in uninsurable_properties:
    insurability_array[property_index, -5:] = False

# Print the insurability array
print(insurability_array)

