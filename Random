import numpy as np

# Your 3D array
#dd = np.random.randint(low=10, high=20, size=(2, 2, 7))
dd = np.array([[[17, 13, 18, 14, 17, 16, 16],
        [17, 17, 11, 10, 12, 17, 13]],

       [[16, 16, 13, 13, 18, 16, 17],
        [14, 13, 11, 18, 18, 11, 14]]])
print(dd)
# Initialize an array of the same shape as dd
new_dd = np.zeros(dd.shape)

# Loop over each simulation and property
for i in range(dd.shape[0]):
    for j in range(dd.shape[1]):
        # U1 = T1
        new_dd[i, j, 0] = dd[i, j, 0]
        # For each year from U2 to U7
        for k in range(1, dd.shape[2]):
            # Calculate the value based on previous years
            for l in range(min(k+1, 5)):  # Only consider the last 5 years
                new_dd[i, j, k] += dd[i, j, k-l] * (1 - 0.2*l)
                
print(new_dd)
